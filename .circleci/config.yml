version: 2

defaults: &defaults
  working_directory: ~/project/oms
  docker:
    - image: circleci/node:latest

jobs:
  # Install dependencies, restore/save them to cache, add them to the current workspace
  install_and_build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            - v4-dependencies
      - run:
          name: Install monorepo dependencies
          command: yarn
      - run:
          name: Install packages dependencies / Build sources
          command: yarn bootstrap
      - save_cache:
          key: v4-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
            - packages/omg/node_modules
            - packages/omg-ui/node_modules
            - packages/omg-validate/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - oms

  # Lint all packages
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Linting
          command: yarn lint

  regression:
    working_directory: ~/project/oms
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install NodeJS and YarnPKG
          command: |
            source ~/.bashrc
            export DEBIAN_FRONTEND=noninteractive
            nvm install v12 && nvm alias default 12
            curl -o- -L https://yarnpkg.com/install.sh | bash
      - run:
          command: |
            source ~/.bashrc
            yarn
      - run:
          command: |
            source ~/.bashrc
            yarn bootstrap
      - run:
          command: |
            source ~/.bashrc
            ./tests/regression/test.sh

  # Run tests on all packages
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Testing with coverage
          command: yarn coverage
      - run:
          name: Uploading to Codecov
          command: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2

  release:
    jobs:
      - install_and_build:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
          requires:
            - install_and_build
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - install_and_build
      - regression:
          filters:
            tags:
              only: /.*/
          requires:
            - install_and_build
