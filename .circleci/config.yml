version: 2

defaults: &defaults
  working_directory: ~/project/oms
  docker:
    - image: circleci/node:latest

jobs:
  # Install dependencies, restore/save them to cache, add them to the current workspace
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-dependencies-oms-{{ checksum "packages/oms/yarn.lock" }}
            - v3-dependencies-oms
      - restore_cache:
          keys:
            - v3-dependencies-oms-ui-{{ checksum "packages/oms-ui/yarn.lock" }}
            - v3-dependencies-oms-ui
      - restore_cache:
          keys:
            - v3-dependencies-oms-validate-{{ checksum "packages/oms-validate/yarn.lock" }}
            - v3-dependencies-oms-validate
      - run:
          name: Installing Lerna
          command: yarn
      - run:
          name: Install local dependencies
          command: yarn bootstrap
      - save_cache:
          key: v3-dependencies-oms-{{ checksum "packages/oms/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - packages/oms/node_modules
      - save_cache:
          key: v3-dependencies-oms-ui-{{ checksum "packages/oms-ui/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - packages/oms-ui/node_modules
      - save_cache:
          key: v3-dependencies-oms-validate-{{ checksum "packages/oms-validate/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - packages/oms-validate/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - oms

  # Lint all packages
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Linting
          command: yarn lint

  regression:
    working_directory: ~/project/oms
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          command: sudo apt-get update
      - run:
          command: curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -
      - run:
          command: curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      - run:
          command: sudo apt-get install nodejs
      - run:
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install `nodejs --version`
      - run:
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm alias default `nodejs --version`
      - run:
          command: npm install -g yarn
      - run:
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install `nodejs --version`
      - run:
          command: yarn
      - run:
          command: yarn bootstrap
      - run:
          command: ./tests/regression/test.sh

  # Run tests on all packages
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Testing with coverage
          command: yarn coverage
      - run:
          name: Uploading to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  # Build all packages in production mode
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - v3-dist-oms-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-oms-
      - restore_cache:
          keys:
            - v3-dist-oms-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-oms-ui-
      - restore_cache:
          keys:
            - v3-dist-oms-validate-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-oms-validate-
      - run:
          name: Building
          command: yarn build
      - save_cache:
          key: v3-dist-oms-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/oms/dist
      - save_cache:
          key: v3-dist-oms-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/oms-ui/dist
      - save_cache:
          key: v3-dist-oms-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/oms-validate/dist
      - persist_to_workspace:
          root: ~/project
          paths:
            - oms

  test-post-build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - v3-dist-oms-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-oms-
      - restore_cache:
          keys:
            - v3-dist-oms-validate-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-oms-validate-
      - run:
          name: Run test
          command: yarn test-post-build
      - save_cache:
          key: v3-test-post-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - tests
      - persist_to_workspace:
          root: ~/project
          paths:
            - oms

workflows:
  version: 2

  release:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - build
      - test-post-build:
          filters:
            tags:
              only: /.*/
          requires:
            - build
      - regression:
          filters:
            tags:
              only: /.*/
